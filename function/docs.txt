Python Functions:
   A function is a block of code which only runs when it is called.
   You can pass data, known as parameters, into a function.
   A function can return data as a result.


Creating a Function:
   In Python a function is defined using the def keyword.
   A parameter is the variable listed inside the parentheses in the function definition.
   An argument is the value that is sent to the function when it is called.

   Example:
        def my_function(fname):
           print(fname + " Ranjan")
        my_function('Priya')


Arbitrary Arguments, *args:
    If you do not know how many arguments that will be passed into your function, add a * before 
    the parameter name in the function definition.
    This way the function will receive a tuple of arguments, and can access the items accordingly.


Keyword Arguments:
    You can also send arguments with the key = value syntax.
    This way the order of the arguments does not matter.

    Example:
        def my_function(child3, child2, child1):
           print("The youngest child is " + child3)
        my_function(child1 = "Emil", child2 = "Tobias", child3 = "Linus")



Arbitrary Keyword Arguments, **kwargs:
    If you do not know how many keyword arguments that will be passed into your function, 
    add two asterisk: ** before the parameter name in the function definition.
    This way the function will receive a dictionary of arguments, and can access the items 
    accordingly.

    Example:
        def my_function(**kid):
           print("His last name is " + kid["lname"])
        my_function(fname = "Tobias", lname = "Refsnes")

You can send any data types of argument to a function (string, number, list, dictionary etc.), 
and it will be treated as the same data type inside the function.

Function definitions cannot be empty, but if you for some reason have a function definition 
with no content, put in the pass statement to avoid getting an error.